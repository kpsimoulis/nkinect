language: node_js
os:
  - linux
  - osx
dist: trusty
notifications:
  slack: rubeniskov:I82ZGuYOEQrhl29wBbQFEdjP#nkinect
cache:
  bundler: true
  directories:
  - node_modules
  - session
  - vendor
node_js:
  - "v8.0.0"
  - "v7.0.0"
  - "v6.0.0"
  - "v5.0.0"
  - "v4.1.0"
before_install:
  - if [ ! -d /usr/local/include/libfreenect ]; then
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            echo "Installing required dependencies for Linux";
            sudo apt-get -qq update;
            sudo apt-get install -y git cmake build-essential libusb-1.0;
        elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            echo "Installing required dependencies for MacOS";
            brew update &>/dev/null;
            for i in git cmake libusb libtool; do
                brew list ${i} &>/dev/null || brew install ${i};
            done;
        fi;
        echo "Installing libfreenect";
        mkdir -p vendor && cd vendor;
        if [ ! -d libfreenect ]; then
            git clone https://github.com/OpenKinect/libfreenect;
        fi;
        cd libfreenect && mkdir -p build && cd build;
        if [ ! -f lib/libfreenect.dylib ]; then
            cmake -L .. -DBUILD_EXAMPLES=OFF -DBUILD_C_SYNC=OFF -DBUILD_REDIST_PACKAGE=OFF -DBUILD_CPP=OFF && make -j$(nproc);
        fi;
        sudo make install;
    fi
  - if [ ! -d session ]; then
        echo "Downloading fakenect sample session";
        wget "https://bitbucket.org/openiss/public/downloads/test-recording.tar.bz2" -O - | tar -jxvf;
    fi
install:
  - npm install
before_script:
  - npm run build
script:
  - npm test
